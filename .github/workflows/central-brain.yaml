name: Build and Deploy Central Brain Lambda

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'central-brain/**'
      - '.github/workflows/central-brain.yaml'

env:
  AWS_REGION: us-east-1

jobs:
  build-and-deploy-central-brain:
    name: Build and Deploy Central Brain Lambda
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9' # Using Python 3.9 for Lambda compatibility

    - name: Install dependencies and tools
      run: |
        pip install black flake8
        if [ -f central-brain/src/requirements.txt ]; then pip install -r central-brain/src/requirements.txt; fi

    - name: Lint and Format Check
      run: |
        black --check central-brain/
        flake8 central-brain/

    - name: Create Lambda Deployment Package
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        echo "Creating deployment package..."
        mkdir package
        pip install -r central-brain/src/requirements.txt -t ./package
        cp -r central-brain/src/* ./package/
        cd package
        zip -r ../central-brain-deployment.zip .
        cd ..
        echo "Deployment package created."

    - name: Configure AWS credentials
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Upload Lambda Package to S3
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        S3_BUCKET="ai-devops-platform-lambda-code-${{ secrets.AWS_ACCOUNT_ID }}"
        ZIP_KEY="central-brain-${{ github.sha }}.zip"
        aws s3 cp central-brain-deployment.zip s3://$S3_BUCKET/$ZIP_KEY
        echo "Uploaded to s3://$S3_BUCKET/$ZIP_KEY"
        # Save the S3 key for the Terraform workflow
        mkdir -p artifacts
        echo $ZIP_KEY > artifacts/lambda_zip_key.txt

    - name: Upload Lambda Zip Key Artifact
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v4
      with:
        name: central-brain-lambda-zip-key
        path: artifacts/lambda_zip_key.txt